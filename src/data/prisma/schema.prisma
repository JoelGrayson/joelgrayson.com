generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

// # Blog
model User {
    id        Int      @id @default(autoincrement())
    createdAt DateTime @default(now())
    email     String   @unique
    name      String?
}

model Article {
    id              String    @id @default(cuid())
    name            String //for import(`components/articles/${name}`) and URL `/image/blog/${name}`
    hyphenatedTitle String    @unique
    views           Int       @default(0) //number of views
    comments        Comment[]
}

// Have to verify email every time you post a comment
model Comment {
    id        String   @id @default(cuid())
    author    String //display name on comment author
    content   String
    postedAt  DateTime
    email     String
    Article   Article  @relation(fields: [articleId], references: [id])
    articleId String

    verified    Boolean @default(false) //whether or not the email has been verified
    verifyToken String  @unique
}

// # Stats (api.joelgrayson.com adds stats to this table every morning)
model Stats {
    id                         String   @id @default(cuid())
    date                       DateTime @default(now())
    homeworkCheckerInstalls    Int?
    focusInstalls              Int?
    blogViews                  Int?
    shanghaiDictionarySearches Int?
}

// # Logging
model Error {
    id       String   @id @default(cuid())
    date     DateTime @default(now())
    source   String //url or backend
    message  String
    resolved Boolean  @default(false)
}

model Contact {
    id      String   @id @default(cuid())
    date    DateTime @default(now())
    name    String
    email   String
    message String
    origin  String
}

model LirongArtEmailList {
    id        String   @id @default(cuid())
    email     String   @unique
    name      String
    dateAdded DateTime @default(now())
    origin    String?
}
